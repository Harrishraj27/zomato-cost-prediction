from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error
import numpy as np

# Train and evaluate Linear Regression model
linear_model = LinearRegression()
linear_model.fit(X_train, y_train)
y_pred_linear = linear_model.predict(X_test)
rmse_linear = np.sqrt(mean_squared_error(y_test, y_pred_linear))

# Train and evaluate Random Forest model
rf_model = RandomForestRegressor()
rf_model.fit(X_train, y_train)
y_pred_rf = rf_model.predict(X_test)
rmse_rf = np.sqrt(mean_squared_error(y_test, y_pred_rf))

# Train and evaluate Decision Tree model
dt_model = DecisionTreeRegressor()
dt_model.fit(X_train, y_train)
y_pred_dt = dt_model.predict(X_test)
rmse_dt = np.sqrt(mean_squared_error(y_test, y_pred_dt))

print("RMSE for Linear Regression:", rmse_linear)
print("RMSE for Random Forest:", rmse_rf)
print("RMSE for Decision Tree:", rmse_dt)

# Compare the RMSE values and choose the best model
best_rmse = min(rmse_linear, rmse_rf, rmse_dt)

if best_rmse == rmse_linear:
    best_model = linear_model
    print("Linear Regression is the best fit.")
elif best_rmse == rmse_rf:
    best_model = rf_model
    print("Random Forest is the best fit.")
else:
    best_model = dt_model
    print("Decision Tree is the best fit.")
